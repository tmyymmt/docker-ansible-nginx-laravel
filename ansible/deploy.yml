---
- name: Deploy Laravel and Next.js integrated sample projects on Rocky Linux 9.3
  hosts: localhost
  connection: local
  vars:
    project_dir: "/opt/project"
    laravel_dir: "{{ project_dir }}/laravel-sample"
    nextjs_dir: "{{ project_dir }}/nextjs-sample"
  tasks:
    - name: Ensure project directory exists
      file:
        path: "{{ project_dir }}"
        state: directory
        mode: '0755'

    - name: Install required Python MySQL module
      dnf:
        name: python3-PyMySQL
        state: present

    - name: Setup MySQL database for Laravel
      mysql_db:
        name: laravel
        state: present

    - name: Setup Laravel sample project
      block:
        - name: Remove existing Laravel directory if it exists
          file:
            path: "{{ laravel_dir }}"
            state: absent
          when: laravel_dir is defined and laravel_dir != ""

        - name: Ensure Laravel directory exists
          file:
            path: "{{ laravel_dir }}"
            state: directory
            mode: '0755'

        - name: Install Laravel via Composer
          shell: |
            cd {{ project_dir }}
            composer create-project --prefer-dist "Laravel/Laravel=8.*" laravel-sample

        - name: Set permissions for Laravel storage and cache
          file:
            path: "{{ item }}"
            state: directory
            mode: '0777'
            recurse: yes
          with_items:
            - "{{ laravel_dir }}/storage"
            - "{{ laravel_dir }}/bootstrap/cache"

        - name: Create .env file for Laravel
          copy:
            dest: "{{ laravel_dir }}/.env"
            content: |
              APP_NAME=Laravel
              APP_ENV=production
              APP_DEBUG=false
              APP_URL=http://localhost
              LOG_CHANNEL=stack
              DB_CONNECTION=mysql
              DB_HOST=127.0.0.1
              DB_PORT=3306
              DB_DATABASE=laravel
              DB_USERNAME=root
              DB_PASSWORD=
              BROADCAST_DRIVER=log
              CACHE_DRIVER=file
              QUEUE_CONNECTION=sync
              SESSION_DRIVER=file
              SESSION_LIFETIME=120
              MEMCACHED_HOST=127.0.0.1
              REDIS_HOST=127.0.0.1
              REDIS_PASSWORD=null
              REDIS_PORT=6379
              MAIL_MAILER=smtp
              MAIL_HOST=mailhog
              MAIL_PORT=1025
              MAIL_USERNAME=null
              MAIL_PASSWORD=null
              MAIL_ENCRYPTION=null
              MAIL_FROM_ADDRESS=hello@example.com
              MAIL_FROM_NAME="${APP_NAME}"
              AWS_ACCESS_KEY_ID=
              AWS_SECRET_ACCESS_KEY=
              AWS_DEFAULT_REGION=us-east-1
              AWS_BUCKET=
              PUSHER_APP_ID=
              PUSHER_APP_KEY=
              PUSHER_APP_SECRET=
              PUSHER_APP_CLUSTER=mt1
              MIX_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
              MIX_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"

        - name: Create Laravel API route
          lineinfile:
            path: "{{ laravel_dir }}/routes/api.php"
            line: |
              Route::get('/hello', function () {
                return response()->json(['message' => 'Hello World from Laravel']);
              });

        - name: Run Laravel migrations
          shell: |
            cd {{ laravel_dir }}
            php artisan migrate --force

    - name: Setup Next.js sample project
      block:
        - name: Remove existing Next.js directory if it exists
          file:
            path: "{{ nextjs_dir }}"
            state: absent
          when: nextjs_dir is defined and nextjs_dir != ""

        - name: Ensure Next.js directory exists
          file:
            path: "{{ nextjs_dir }}"
            state: directory
            mode: '0777'

        - name: Change .npm directory to /tmp/.npm with 1000:1000 777
          shell: |
            mkdir -p /tmp/.npm
            chown -R 1000:1000 /tmp/.npm
            chmod 777 /tmp/.npm
            npm config set prefix /tmp/.npm

        - name: Install create-next-app globally
          npm:
            name: create-next-app@12.0.8
            state: present
            global: yes

        - name: Install Next.js via npx
          shell: |
            cd {{ project_dir }}
            npx create-next-app@12.0.8 --use-npm nextjs-sample
          ignore_errors: yes
          register: result

        - name: Show error
          debug:
            var: result

        - name: Create package.json for Next.js
          copy:
            dest: "{{ nextjs_dir }}/package.json"
            content: |
              {
                "name": "nextjs-sample",
                "private": true,
                "scripts": {
                  "dev": "next dev",
                  "build": "next build",
                  "start": "next start",
                  "lint": "next lint"
                },
                "dependencies": {
                  "next": "12.0.8",
                  "react": "17.0.2",
                  "react-dom": "17.0.2"
                },
                "devDependencies": {
                  "eslint": "8.5.0",
                  "eslint-config-next": "12.0.8"
                }
              }

        - name: Install Next.js dependencies
          shell: |
            cd {{ nextjs_dir }}
            npm install --unsafe-perm=true --allow-root --no-audit
          ignore_errors: yes
          register: result

        - name: Show error
          debug:
            var: result

        - name: Create Next.js API call to Laravel
          copy:
            dest: "{{ nextjs_dir }}/pages/index.js"
            content: |
              import { useEffect, useState } from 'react';
              import Head from 'next/head';
              import Image from 'next/image';
              import styles from '../styles/Home.module.css';

              export default function Home() {
                const [message, setMessage] = useState('');

                useEffect(() => {
                  fetch("/laravel/api/hello")
                    .then(response => response.json())
                    .then(data => setMessage(data.message));
                }, []);

                return (
                  <div>
                    <h1>This page is generated by Next.js</h1>
                    <h2>Message from Laravel API:</h2>
                    <p>{message}</p>
                  </div>
                );
              }

    - name: Configure Nginx
      block:
        - name: Create Nginx configuration file
          copy:
            dest: /usr/local/nginx/conf/nginx.conf
            content: |
              events {
                worker_connections 1024;
              }
              http {
                server {
                  listen 80;
                  server_name localhost;
                  index index.html index.htm index.php;
              
                  location / {
                    proxy_pass http://127.0.0.1:3000;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection 'upgrade';
                    proxy_set_header Host $host;
                    proxy_cache_bypass $http_upgrade;
                  }
              
                  location ~ ^/laravel((/)?(.+))?$ {
                    root /opt/project/laravel-sample/public;
                    try_files $1 /laravel/index.php?$query_string;
              
                    location ~ ^/laravel/index.php$ {
                      include fastcgi_params;
                      fastcgi_param SCRIPT_FILENAME $document_root/index.php;
                      fastcgi_param PATH_INFO $fastcgi_path_info;
                      fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;
                      fastcgi_split_path_info ^(.+\.php)(/.+)$;
                      fastcgi_pass 127.0.0.1:9000;
                      fastcgi_index index.php;
                    }
                  }
              
                  error_page 404 /404.html;
                  location = /40x.html {
                  }
              
                  error_page 500 502 503 504 /50x.html;
                  location = /50x.html {
                  }

                  listen 443 ssl;
                  server_name localhost;
                  ssl_certificate /usr/local/nginx/conf/server.crt;
                  ssl_certificate_key /usr/local/nginx/conf/server.key;
                }
              }

        - name: Restart Nginx
          systemd:
            name: nginx
            state: restarted
            enabled: yes

    - name: Start Next.js server
      shell: |
        cd {{ nextjs_dir }}
        npm run build
        npm start -- --hostname 127.0.0.1 --port 3000 &
      async: 30
      poll: 0
